<style>
  .head {
    text-align: center;
  }

  .text {
    color: black;
    text-align: center;
    font-size: 50px;
    padding: 15px 0px 30px 0px;
    font-family: sans-serif;

  }

  .bgrmain {
    position: absolute;
    top: -57px;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-image: url(../../public/img/bg-2.png);
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    display: flex;
    justify-content: center;
  }

  .component-add-transaction {
    display: flex;
    justify-content: center;
    flex-direction: column;
  }

  .button {
    color: black;
    background-color: white;
    font-size: 20px;
    padding: 15px 16px 15px 16px;
    text-align: center;
    cursor: pointer;
    margin-top: 10px;
    margin-left: 600px;
    margin-right: 600px;
    border-radius: 10px;
    box-shadow: 1px 5px 10px #757575;
  }

  .button:hover {
    background-color: #60aa82;
    color: white;
  }

  input {
    width: 600px;
    padding-left: 10px;
    height: 50px;
    margin-bottom: 40px;
    border-radius: 7px;
    box-shadow: 1px 5px 10px #757575;
    border: 1px solid grey;
    background-color: white;
    font-size: 15px;
    display: block;
    margin-left: 370px;
    box-sizing: border-box;
  }

  .select {
    font-size: 15px;
    width: 600px;
    padding-left: 8px;
    height: 50px;
    margin-bottom: 40px;
    border-radius: 7px;
    box-shadow: 1px 5px 10px #757575;
    border: 1px solid grey;
    color: #757575;
    cursor: pointer;
    background-color: white;
    display: block;
    margin-left: 370px;
    box-sizing: border-box;

  }

  .alert.alert-success.alert-dismissible {
    width: 438px;
    position: fixed;
    right: 0;
  }

  .alert.alert-danger.alert-dismissible {
    width: 438px;
    position: fixed;
    right: 0;
  }
</style>

<div class="bgrmain">
  <div class="component-add-transaction">
    <div class="text head">Transaction Details</div>
    <form action="/functions/add-transaction" method="post">
      <input id="box1" type="text" class="box" placeholder="Transaction's name" name="name">
      <input type="text" class="box" placeholder="Amount" name="amount_of_money" id="amount" oninput="formatCurrency(this)">

      <select name="payment_method" class="select">
        <option value="Credit card">Credit card</option>
        <option value="Cash">Cash</option>
        <option value="Debit card">Debit card</option>
        <option value="e-Wallet">e-Wallet</option>
      </select>

      <select name="category_name" class="select">
        <option value="food">Food</option>
        <option value="education">Education</option>
        <option value="clothes">Clothes</option>
        <option value="entertainment">Entertainment</option>
        <option value="invest">Invest</option>
        <option value="other">Others</option>
      </select>

      <input type="date" class="box" placeholder="Transaction Date" name="exchange_date">
      <button class="button" type="submit">SUBMIT</button>
    </form>
  </div>
</div>

{{#if isAdded}}
<div class="alert alert-success alert-dismissible">
  <button type="button" class="close" data-dismiss="alert">&times;</button>
  <strong>Success!</strong> A new transaction has just been added
</div>
{{/if}}

{{#if notAdded}}
<div class="alert alert-danger alert-dismissible">
  <button type="button" class="close" data-dismiss="alert">&times;</button>
  <strong>Failed!</strong> The amount has exceeded the allowed budget
</div>
{{/if}}

<script>
  document.addEventListener("DOMContentLoaded", function() {
    formatCurrency(document.getElementById("amount"));
  });

  function formatCurrency(input) {
    // Get input value
    let value = input.value;

    // Remove non-numeric characters
    value = value.replace(/[^0-9.]/g, '');

    // Format with commas for thousands separator
    value = numberWithCommas(value);

    // Set formatted value back to input
    input.value = value;
  }

  function numberWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
  }
</script>